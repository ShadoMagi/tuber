[project]
name = "tuber"
version = "0.0.1"
description = "It's a potato."
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
keywords = ["events"]
authors = [
  {name = "Mark Murnane", email = "mark@hackafe.net"}
]
classifiers = [
    'Development Status :: 3 - Alpha',
    'Environment :: No Input/Output (Daemon)',
    'Operating System :: POSIX :: Linux',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3 :: Only',
]

dependencies = [
    'requests',
    'alembic',
    'passlib',
    'flask>=1.0',
    'gunicorn',
    'redis',
    'lupa',
    'jinja2',
    'psycopg2-binary'
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-postgresql",
    "psycopg",
    "coverage[toml]",
    "fakeredis"
]

[project.urls]
homepage = "https://github.com/magfest/tuber"

[project.scripts]
tuber = "tuber.__main__:main"


[tool.setuptools.package-data]
mypkg = [
    "alembic.ini",
    "migrations/*",
    "migrations/**/*",
    "static/*"
]

[tool.coverage.run]
branch = true
dynamic_context = "test_function"

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    'pragma: no cover',

    # Don't complain about missing debug-only code:
    'def __repr__',
    'if self\.debug',

    # Don't complain if tests don't hit defensive assertion code:
    'raise AssertionError',
    'raise NotImplementedError',

    # Don't complain if non-runnable code isn't run:
    'if 0:',
    'if __name__ == .__main__.:',

    # Don't complain about abstract methods, they aren't run:
    '@(abc\.)?abstractmethod',
]
ignore_errors = true
skip_empty = true
omit = [
    "*/tests/*"
]

[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"